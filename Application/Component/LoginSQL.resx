<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABSAZoDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7L/4V74X/AOhd0v8A8A4/8KP+Fe+F/wDoXdL/APAOP/CugopW
        Q7nP/wDCvvC//Qu6X/4Bx/4Uf8K+8Mf9C9pf/gJH/hXQU7AosguYH/CvvDH/AEL2mf8AgIn+FJ/wr/w1
        /wBC/pn/AICR/wCFdAOfXP5/SlHOQRj0OCfrRZBc5/8A4QDw3/0L2mf+Aif4UL4A8OH/AJgGm/8AgIn+
        FdIDnIyM1IoGaLILnMf8IB4c/wChf0//AMBE/wAKX/hAPDv/AEANP/8AARP8K6oc08enUjqNwzj1xRZB
        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
</value>
  </data>
</root>